{
    "Description": "Template to create VPC with 2 public subnets with 2 ec2 webservers - Michael Phan",
    "Parameters": {
        "SSHKeyPair": {
            "Description": "SSH Key Pair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "VPC1"
                    }
                ]
            }
        },
        "PublicSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.0.0/24",
                "AvailabilityZone": "us-east-1a",
                "MapPublicIpOnLaunch": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "subnet-public-A"
                    }
                ]

            }
        },
        "PublicSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.1.0/24",
                "AvailabilityZone": "us-east-1b",
                "MapPublicIpOnLaunch": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "subnet-public-B"
                    }
                ]

            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "VPC1-IGW"
                    }
                ]
            }
        },
        "InternetGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PublicRT"
                    }
                ]
            }
        },
        "SubnetAssociateRouteTableA": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": 
                    {
                        "Ref": "PublicSubnetA"
                    }
            }
        },
        "SubnetAssociateRouteTableB": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": 
                    {
                        "Ref": "PublicSubnetB"
                    }
            }
        },
        "RoutePublicTabletoInternet": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "InternetGatewayAttachment",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "WebserverSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow http and SSH to client host",
                "GroupName": "WebserverSG",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "Ec2Webserver1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "SSHKeyPair"
                },
                "ImageId": "ami-0323c3dd2da7fb37d",
                "InstanceType": "t3.micro",
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": true,
                        "DeviceIndex": 0,
                        "GroupSet": [
                            {
                                "Ref": "WebserverSG"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "PublicSubnetA"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "webserver1"
                    }
                ],
                "UserData": {"Fn::Base64": { "Fn::Join": ["", [
                    "#!/bin/bash\n",
                    "yum update -y\n",
                    "yum install httpd -y\n",
                    "yum install git -y\n",
                    "systemctl start httpd\n",
                    "git clone https://github.com/eokim/webserver1.git\n",
                    "cp /webserver1/* /var/www/html"
                    ]]}}
                }
            },
            "Ec2Webserver2": {
                "Type": "AWS::EC2::Instance",
                "Properties": {
                    "KeyName": {
                        "Ref": "SSHKeyPair"
                    },
                    "ImageId": "ami-0323c3dd2da7fb37d",
                    "InstanceType": "t3.micro",
                    "NetworkInterfaces": [
                        {
                            "AssociatePublicIpAddress": true,
                            "DeviceIndex": 0,
                            "GroupSet": [
                                {
                                    "Ref": "WebserverSG"
                                }
                            ],
                            "SubnetId": {
                                "Ref": "PublicSubnetB"
                            }
                        }
                    ],
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "webserver2"
                        }
                    ],
                    "UserData": {"Fn::Base64": { "Fn::Join": ["", [
                        "#!/bin/bash\n",
                        "yum update -y\n",
                        "yum install httpd -y\n",
                        "yum install git -y\n",
                        "systemctl start httpd\n",
                        "git clone https://github.com/eokim/webserver2.git\n",
                        "cp /webserver2/* /var/www/html"
                        ]]}}
                    }
                }
        }
    
}